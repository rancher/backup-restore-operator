name: Backup Restore CI

permissions:
  contents: read

on:
  workflow_call:
  push:
    branches:
      - main
      - release/v[0-9]+.(0|x)
      - release/v[0-9]+.[0-9]+.[0-9]+
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
  pull_request:
    paths-ignore:
    - 'docs/**'
    - '*.md'
    - '.gitignore'
    - 'CODEOWNERS'
    - 'LICENSE'
jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: '1.24'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@55c2c1448f86e01eaae002a5a3a9624417608d84 # v6
        with:
          version: v1.64.8
  build:
    name: CI Build
    strategy:
      matrix:
        arch:
          - x64
          - arm64
    runs-on: runs-on,image=ubuntu22-full-${{ matrix.arch }},runner=4cpu-linux-${{ matrix.arch }},run-id=${{ github.run_id }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0
      - name: Install go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: 1.24
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
      - name: Install helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Helm-unittest
        run: helm plugin install https://github.com/helm-unittest/helm-unittest
      - name: CI
        run: make ci
  test:
    name: integration-test
    runs-on: runs-on,image=ubuntu22-full-${{ matrix.arch }},runner=4cpu-linux-${{ matrix.arch }},run-id=${{ github.run_id }}
    strategy:
      matrix:
        arch:
          - x64
          - arm64
        K3S_VERSION:
          - v1.30.9-k3s1
          - v1.32.1-k3s1
    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: Install go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: 1.24
      - name: Install helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Helm-unittest
        run: helm plugin install https://github.com/quintush/helm-unittest
      - name: Setup helm charts
        run: ./scripts/package-helm
      - name: Debug
        run: ls -R ./dist/artifacts
      - name: Install k3d
        run: ./.github/workflows/scripts/install-k3d.sh
      - name: Setup test environment
        run: |
          CLUSTER_NAME=backup-restore K3S_VERSION=${{ matrix.K3S_VERSION }} ./scripts/testenv
          k3d kubeconfig get backup-restore > kubeconfig.yaml
      - name: Debug kubeconfig
        run: cat kubeconfig.yaml
      - name: Run e2e tests
        run: |
          cd e2e && KUBECONFIG=$KUBECONFIG CHART_NAMESPACE=cattle-resources-system go test -v -timeout 10m -count=1 ./...
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig.yaml