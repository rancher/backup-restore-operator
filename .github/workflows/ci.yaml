name: Backup Restore CI

permissions:
  contents : read

on:
  workflow_call:
  push:
    branches:
      - main
      - release/v5.0
      - release/v4.0
      - release/v3.0
      - release/v[0-9]+.[0-9]+.[0-9]+
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
  pull_request:
    paths-ignore:
    - 'docs/**'
    - '*.md'
    - '.gitignore'
    - 'CODEOWNERS'
    - 'LICENSE'
jobs:
  build:
    strategy:
      matrix:
        arch:
          - x64
          - arm64
    name : CI
    runs-on : runs-on,image=ubuntu22-full-${{ matrix.arch }},runner=4cpu-linux-${{ matrix.arch }},run-id=${{ github.run_id }}
    outputs:
      k3sversions: ${{ steps.support.outputs.k3sversions }}
    steps:
      - name : Checkout repository
        uses : actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with :
          fetch-depth : 0
      - name: Set K3s support output
        id : support
        run: ./.github/workflows/scripts/supported-versions.sh | awk '{print "k3sversions="$0}' >> $GITHUB_OUTPUT
      - name : CI
        run : make ci
      - name: Upload artifact
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
        with:
          name: bro-build-artifacts-${{ matrix.arch }}
          path: ./dist/artifacts
        
  test:
    name : integration-test
    needs : [
      build
    ]
    runs-on : runs-on,image=ubuntu22-full-${{ matrix.arch }},runner=4cpu-linux-${{ matrix.arch }},run-id=${{ github.run_id }}
    strategy:
      matrix:
        arch:
          - x64
          - arm64
        K3S_VERSION : ${{ fromJSON(needs.build.outputs.k3sversions) }}
    steps:
      - name : Checkout repository
        uses : actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name : Fetch build artifacts
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4
        with:
          name: bro-build-artifacts-${{ matrix.arch }}
          path: ./dist/artifacts/
      - name : Debug
        run : ls -R ./dist/artifacts
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3
      - name : Load backup-restore-operator image
        run : docker image load -i ./dist/artifacts/backup-restore-operator.img
      - name: Install go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5
        with:
          go-version: 1.22
      - name : Install k3d
        run : ./.github/workflows/scripts/install-k3d.sh
      - name : Install minio client
        run : ./.github/workflows/scripts/install-mc.sh
      - name : Setup k3d cluster
        run : CLUSTER_NAME=backup-restore K3S_VERSION=${{ matrix.K3S_VERSION }} ./.github/workflows/scripts/setup-cluster.sh
      - name : Run integration tests
        run : ./scripts/integration