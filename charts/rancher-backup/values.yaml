image:
  repository: rancher/backup-restore-operator
  tag: %TAG%

optionalResources:
  ## If enabled, will include kubewarden-related resources in the backups
  kubewarden:
    enabled: false

## Default s3 bucket for storing all backup files created by the backup-restore-operator
s3:
  enabled: false
  ## credentialSecretName if set, should be the name of the Secret containing AWS credentials.
  ## To use IAM Role, don't set this field
  credentialSecretName: ""
  credentialSecretNamespace: ""
  region: ""
  bucketName: ""
  folder: ""
  endpoint: ""
  endpointCA: ""
  insecureTLSSkipVerify: false
  ## Optional s3 client configuration
  # clientConfig:
  #   aws:
  #     ## Use dualstack endpoints (IPv6 support); defaults to true
  #     dualStack: false

## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
## If persistence is enabled, operator will create a PVC with mountPath /var/lib/backups
persistence:
  enabled: false

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack).
  ## Refer https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1
  ##
  storageClass: "-"

  ## If you want to disable dynamic provisioning by setting storageClass to "-" above,
  ## and want to target a particular PV, provide name of the target volume
  volumeName: ""

  ## Only certain StorageClasses allow resizing PVs; Refer https://kubernetes.io/blog/2018/07/12/resizing-persistent-volumes-using-kubernetes/
  size: 2Gi

# Add log level flags to backup-restore
debug: false
trace: false

# http[s] proxy server passed to backup client
# proxy: http://<username>@<password>:<url>:<port>

# comma separated list of domains or ip addresses that will not use the proxy
noProxy: 127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,.svc,.cluster.local

global:
  cattle:
    systemDefaultRegistry: ""
    psp:
      enabled: false # PSP enablement should default to false
  kubectl:
    repository: rancher/kuberlr-kubectl
    tag: v5.0.0

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## List of node taints to tolerate (requires Kubernetes >= 1.6)
tolerations: []

affinity: {}

serviceAccount:
  annotations: {}

priorityClassName: ""

# Override imagePullPolicy for image
# options: Always, Never, IfNotPresent
# Defaults to Always
imagePullPolicy: "Always"

## Optional array of imagePullSecrets containing private registry credentials
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

monitoring:
  metrics:
    enabled: false
    rancherBackupDurationBuckets: 0.5, 1, 2.5, 5, 7.5, 10, 30, 60, 120

  serviceMonitor:
    enabled: false

    additionalLabels: {}
    metricRelabelings: []
    relabelings: []

  prometheusRules:
    ## The "BackupFailed" alert is included by default when .Values.monitoring.prometheusRules.defaultAlert.enabled is set to true and rancher-monitoring is installed.
    defaultAlert:
      enabled: false
      labels:
        severity: critical
      window: 5m

    ## Define custom Prometheus rules here.
    customRules:
      enabled: false
      rules: []

securityContext:
  ## When persisting backup files to a PVC of type HostPath, set securityContext.runAsNonRoot to false.
  ## Only processes running as 'root' can write to HostPath PVCs so Backups will fail in that scenario if not running as 'root'.
  ## However, this goes against Kubernetes security best practices and should be avoided whenever possible.
  runAsNonRoot: true
